{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ProfileComponent = class ProfileComponent {\n  constructor(FB, US, toaster) {\n    this.FB = FB;\n    this.US = US;\n    this.toaster = toaster;\n    this.edit = false;\n    this.bgColor = '#f0ad4e';\n    this.user = {\n      name: '',\n      email: '',\n      phone: '',\n      password: ''\n    };\n    this.updateProfile = this.FB.group({\n      name: this.FB.control('', [Validators.required]),\n      email: this.FB.control('', [Validators.required]),\n      phone: this.FB.control('', [Validators.required]),\n      password: this.FB.control('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.checkUser();\n  }\n  editProfile(FormData) {\n    this.edit = !this.edit;\n    this.user.name = this.name;\n    this.user.email = this.email;\n    this.user.phone = this.phone;\n    this.user.password = this.password;\n    if (!this.edit) {\n      this.bgColor = '#f0ad4e';\n      let user = localStorage.getItem(\"user\");\n      let UserId = user && JSON.parse(user).data.id;\n      this.US.updateProfile(UserId, FormData).subscribe(res => {\n        this.this.checkUser();\n      });\n      // Write Profile Update Code Here\n      // 8269730633\n    } else {\n      this.bgColor = '#28a745';\n    }\n  }\n  checkUser() {\n    let user = localStorage.getItem(\"user\");\n    let UserId = user && JSON.parse(user).data.id;\n    if (UserId) {\n      this.US.getProfile(UserId).subscribe(res => {\n        this.name = res.data.name;\n        this.email = res.data.email;\n        this.phone = res.data.phone;\n        this.password = res.data.password;\n      });\n    }\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","ProfileComponent","constructor","FB","US","toaster","name","email","phone","password","updateProfile","group","control","required","ngOnInit","checkUser","editProfile","FormData","edit","user","bgColor","localStorage","getItem","UserId","JSON","parse","data","id","subscribe","res","this","getProfile","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  edit: boolean = false;\n  bgColor: any = '#f0ad4e';\n  updateProfile: FormGroup;\n\n\n  name: any;\n  email: any;\n  phone: any;\n  password: any;\n\n  user: any = {\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n  }\n  constructor(private FB: FormBuilder, private US: UsersService, private toaster) {\n    this.updateProfile = this.FB.group({\n      name: this.FB.control('', [Validators.required]),\n      email: this.FB.control('', [Validators.required]),\n      phone: this.FB.control('', [Validators.required]),\n      password: this.FB.control('', [Validators.required]),\n    })\n  }\n\n  ngOnInit() {\n    this.checkUser();\n  }\n\n  editProfile(FormData: any) {\n    this.edit = !this.edit;\n    this.user.name = this.name;\n    this.user.email = this.email;\n    this.user.phone = this.phone;\n    this.user.password = this.password;\n    if (!this.edit) {\n      this.bgColor = '#f0ad4e';\n      let user: any = localStorage.getItem(\"user\");\n      let UserId = user && JSON.parse(user).data.id;\n      this.US.updateProfile(UserId, FormData).subscribe((res: any) => {\n        this.\n        this.checkUser();\n      })\n      // Write Profile Update Code Here\n\n      // 8269730633\n    } else {\n      this.bgColor = '#28a745';\n    }\n  }\n\n  checkUser() {\n    let user: any = localStorage.getItem(\"user\");\n    let UserId = user && JSON.parse(user).data.id;\n    if (UserId) {\n      this.US.getProfile(UserId).subscribe((res: any) => {\n        this.name = res.data.name;\n        this.email = res.data.email;\n        this.phone = res.data.phone;\n        this.password = res.data.password;\n      })\n    }\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}