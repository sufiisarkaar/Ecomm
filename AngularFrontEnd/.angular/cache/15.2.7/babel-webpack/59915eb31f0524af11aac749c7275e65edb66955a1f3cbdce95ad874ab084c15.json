{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/item-service.service\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"src/app/services/toaster.service\";\nimport * as i4 from \"@angular/common\";\nfunction ContentComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"img\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"h5\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8)(7, \"p\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 10)(10, \"div\", 11)(11, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function ContentComponent_div_2_Template_a_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.AddToCart(item_r1));\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 13)(14, \"p\", 14);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", item_r1.item_image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.item_name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Discount \", item_r1.item_discount, \"%\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate((ctx_r0.ActiveIdMulti == null ? null : ctx_r0.ActiveIdMulti.includes(item_r1.id)) ? \"Added\" : \"Add To Cart\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \\u20B9 \", item_r1.item_price, \"\");\n  }\n}\nexport class ContentComponent {\n  constructor(IS, userS, toaster) {\n    this.IS = IS;\n    this.userS = userS;\n    this.toaster = toaster;\n  }\n  ngOnInit() {\n    this.getItems();\n  }\n  getItems() {\n    this.IS.getItems().subscribe(res => {\n      this.itemList = res.Result;\n    });\n  }\n  AddToCart(item) {\n    // Call API to add item to cart if user is logged in\n    let user = localStorage.getItem(\"user\");\n    let user_id = user && JSON.parse(user).data.id;\n    let addData = {\n      ...item,\n      user_id\n    };\n    if (this.ActiveIdMulti?.includes(item.id)) {\n      this.toaster.AddToCartFail(item.name);\n    } else {\n      if (user) {\n        this.IS.addToCart(addData).subscribe(response => {\n          this.ActiveId = response.data.item_id;\n          this.cartData();\n          this.toaster.AddToCartSuccess(item.name);\n        }, err => {\n          this.toaster.AddToCartFail(item.item_name);\n        });\n      }\n      if (!localStorage.getItem(\"user\")) {\n        // Retrieve existing data from LocalStorage or create a new empty array\n        let existingData = JSON.parse(localStorage.getItem(\"MyItems\") || \"[]\");\n        // Add the new object to the existing array\n        existingData.push(item);\n        // Save the updated array to LocalStorage\n        localStorage.setItem(\"MyItems\", JSON.stringify(existingData));\n        this.IS.cardData.emit(existingData);\n        this.toaster.AddToCartSuccess(item.item_name);\n        this.IS.PendingdataAddedLocalToDb(item).subscribe(res => {});\n      }\n    }\n    // Retrieve the data from local storage\n    let data = JSON.parse(localStorage.getItem('ActiveAdded') || \"[]\");\n    data.push(item.id);\n    // Store the updated array back to local storage\n    localStorage.setItem('ActiveAdded', JSON.stringify(data));\n    this.ActiveIdMulti = data;\n    console.log(this.ActiveIdMulti);\n  }\n  cartData() {\n    let user = localStorage.getItem('user');\n    let userId = user && JSON.parse(user).data.id;\n    this.IS.getCartDataByUserID(userId).subscribe(res => {\n      this.IS.cardData.emit(res.data);\n    });\n  }\n}\nContentComponent.ɵfac = function ContentComponent_Factory(t) {\n  return new (t || ContentComponent)(i0.ɵɵdirectiveInject(i1.ItemServiceService), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.ToasterService));\n};\nContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContentComponent,\n  selectors: [[\"app-content\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"m-2\"], [\"class\", \"col-6 col-sm-6 col-lg-3 mb-2 mt-2 p-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\", \"col-sm-6\", \"col-lg-3\", \"mb-2\", \"mt-2\", \"p-1\"], [1, \"card\", 2, \"height\", \"350px\"], [\"alt\", \"...\", 1, \"card-img-top\", \"img-fluid\", 2, \"height\", \"200px\", 3, \"src\"], [1, \"card-body\", \"text-center\"], [1, \"card-title\"], [1, \"content\", \"mt-1\", \"mb-4\", 2, \"height\", \"20px\"], [1, \"card-text\", \"mb-4\", \"text-danger\"], [1, \"btnAdd\", \"d-flex\", \"justify-content-between\", 2, \"margin-top\", \"20px\"], [1, \"aadto\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"price\"], [1, \"text-success\", \"mt-2\", \"m-1\"]],\n  template: function ContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ContentComponent_div_2_Template, 16, 5, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.itemList);\n    }\n  },\n  dependencies: [i4.NgForOf],\n  styles: [\".price[_ngcontent-%COMP%] {\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb250ZW50L2NvbnRlbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLnByaWNle1xyXG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ContentComponent","constructor","IS","userS","toaster","ngOnInit","getItems","subscribe","res","itemList","Result","AddToCart","item","user","localStorage","getItem","user_id","JSON","parse","data","id","addData","ActiveIdMulti","includes","AddToCartFail","name","addToCart","response","ActiveId","item_id","cartData","AddToCartSuccess","err","item_name","existingData","push","setItem","stringify","cardData","emit","PendingdataAddedLocalToDb","console","log","userId","getCartDataByUserID","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\content\\content.component.html","C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\content\\content.component.ts"],"sourcesContent":["<div class=\"container mt-4\">\n  <div class=\"row d-flex justify-content-center m-2\">\n\n\n    <div class=\"col-6 col-sm-6 col-lg-3 mb-2 mt-2 p-1\" *ngFor=\"let item of itemList\">\n      <div class=\"card\" style=\"height: 350px;\">\n        <img src=\"{{ item.item_image }}\" class=\"card-img-top img-fluid\" alt=\"...\" style=\"height: 200px;\">\n        <div class=\"card-body text-center\">\n          <h5 class=\"card-title\">{{ item.item_name }}</h5>\n          <div class=\"content mt-1 mb-4\" style=\"height: 20px;\">\n\n            <p class=\"card-text mb-4 text-danger\">Discount {{ item.item_discount }}%</p>\n          </div>\n          <div class=\"btnAdd d-flex justify-content-between\" style=\"margin-top: 20px;\">\n            <div class=\"aadto\">\n              <a class=\"btn btn-success\"\n                (click)=\"AddToCart(item)\">{{ ActiveIdMulti?.includes(item.id)  ?   'Added' : 'Add To Cart' }}</a>\n            </div>\n\n            <div class=\"price \">\n              <p class=\"text-success mt-2 m-1\"> ₹ {{ item.item_price }}</p>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ItemServiceService } from 'src/app/services/item-service.service';\nimport { ToasterService } from 'src/app/services/toaster.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n\n  itemList: any;\n  IsLogin: any;\n  ActiveId : any;\n  ActiveIdMulti:any;\n  constructor(private IS: ItemServiceService, private userS: UsersService, private toaster:ToasterService) { }\n\n  ngOnInit() {\n    this.getItems();\n  }\n\n  getItems() {\n    this.IS.getItems().subscribe((res: any) => {\n      this.itemList = res.Result;\n    })\n  }\n\n\n  AddToCart(item: any) {\n    // Call API to add item to cart if user is logged in\n    let user = localStorage.getItem(\"user\")\n    let user_id = user && JSON.parse(user).data.id;\n    let addData = {\n      ...item,\n      user_id\n    }\nif(this.ActiveIdMulti?.includes(item.id)){\n  this.toaster.AddToCartFail(item.name);\n}else{\n\n    if (user) {\n\n      \n      this.IS.addToCart(addData).subscribe((response:any) => {\n        this.ActiveId = response.data.item_id;\n        this.cartData();\n        this.toaster.AddToCartSuccess(item.name);\n\n      },(err)=>{\n        this.toaster.AddToCartFail(item.item_name);\n      });\n    }\n    if (!localStorage.getItem(\"user\")) {\n      // Retrieve existing data from LocalStorage or create a new empty array\n      let existingData: any = JSON.parse(localStorage.getItem(\"MyItems\") || \"[]\") as string[];\n\n      // Add the new object to the existing array\n      existingData.push(item);\n\n      // Save the updated array to LocalStorage\n      localStorage.setItem(\"MyItems\", JSON.stringify(existingData));\n      this.IS.cardData.emit(existingData)\n      this.toaster.AddToCartSuccess(item.item_name);\n\n      this.IS.PendingdataAddedLocalToDb(item).subscribe((res: any) => {\n       \n        \n      })\n    }\n  }\n\n     // Retrieve the data from local storage\n     let data:any = JSON.parse(localStorage.getItem('ActiveAdded') || \"[]\");\ndata.push(item.id);\n// Store the updated array back to local storage\nlocalStorage.setItem('ActiveAdded', JSON.stringify(data));\nthis.ActiveIdMulti = data ;\nconsole.log(this.ActiveIdMulti);\n\n\n  }\n\n\n\n\n  cartData() {\n    let user = localStorage.getItem('user');\n    let userId = user && JSON.parse(user).data.id;\n    this.IS.getCartDataByUserID(userId).subscribe((res: any) => {\n      this.IS.cardData.emit(res.data);\n    })\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}