{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/item-service.service\";\nimport * as i2 from \"@angular/common\";\nfunction ContentComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"img\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"h5\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 8)(7, \"p\", 9);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 10)(10, \"div\", 11)(11, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function ContentComponent_div_2_Template_a_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.AddToCart(item_r1));\n    });\n    i0.ɵɵtext(12, \"Add To Cart\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 13)(14, \"p\", 14);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()()()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", item_r1.item_image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.item_name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Discount \", item_r1.item_discount, \"%\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \\u20B9 \", item_r1.item_price, \"\");\n  }\n}\nexport class ContentComponent {\n  constructor(IS) {\n    this.IS = IS;\n  }\n  ngOnInit() {\n    this.getItems();\n    this.isUser = localStorage.getItem(\"UserLoggedIn\");\n  }\n  getItems() {\n    this.IS.getItems().subscribe(res => {\n      this.itemList = res.Result;\n      console.log(this.itemList);\n    });\n  }\n  AddToCart(item) {\n    if (!this.isUser) {\n      // Retrieve existing data from LocalStorage or create a new empty array\n      let existingData = JSON.parse(localStorage.getItem(\"MyItems\") || \"[]\");\n      // Add the new object to the existing array\n      existingData.push(item);\n      // Save the updated array to LocalStorage\n      localStorage.setItem('MyItems', JSON.stringify(existingData));\n      console.log(\"Locals \", item);\n    } else {\n      console.log(\"Data \", item);\n      this.IS.addToCart(item).subscribe(() => {});\n    }\n  }\n}\nContentComponent.ɵfac = function ContentComponent_Factory(t) {\n  return new (t || ContentComponent)(i0.ɵɵdirectiveInject(i1.ItemServiceService));\n};\nContentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContentComponent,\n  selectors: [[\"app-content\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"m-2\"], [\"class\", \"col-6 col-sm-6 col-lg-3 mb-2 mt-2 p-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-6\", \"col-sm-6\", \"col-lg-3\", \"mb-2\", \"mt-2\", \"p-1\"], [1, \"card\", 2, \"height\", \"350px\"], [\"alt\", \"...\", 1, \"card-img-top\", \"img-fluid\", 2, \"height\", \"200px\", 3, \"src\"], [1, \"card-body\", \"text-center\"], [1, \"card-title\"], [1, \"content\", \"mt-1\", \"mb-4\", 2, \"height\", \"20px\"], [1, \"card-text\", \"mb-4\", \"text-danger\"], [1, \"btnAdd\", \"d-flex\", \"justify-content-between\", 2, \"margin-top\", \"20px\"], [1, \"aadto\"], [\"href\", \"#\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"price\"], [1, \"text-success\", \"mt-2\", \"m-1\"]],\n  template: function ContentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, ContentComponent_div_2_Template, 16, 4, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.itemList);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".price[_ngcontent-%COMP%] {\\n  font-weight: 800;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb250ZW50L2NvbnRlbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLnByaWNle1xyXG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;IAQEA,8BAAiF;IAE9EA,yBAAiG;IAChGA,8BAAmC;IACVA,YAAoB;IAAAA,iBAAK;IAChDA,8BAAqD;IAEbA,YAAkC;IAAAA,iBAAI;IAE9EA,+BAA6E;IAEpCA;MAAA;MAAA;MAAA;MAAA,OAASA,wCAAe;IAAA,EAAC;IAACA,4BAAW;IAAAA,iBAAI;IAGhFA,gCAAoB;IACgBA,aAAuB;IAAAA,iBAAI;;;;IAb/DA,eAA2B;IAA3BA,qEAA2B;IAENA,eAAoB;IAApBA,uCAAoB;IAGHA,eAAkC;IAAlCA,8DAAkC;IAQpCA,eAAuB;IAAvBA,yDAAuB;;;ACfrE,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,EAAqB;IAArB,OAAE,GAAFA,EAAE;EAAqB;EAE3CC,QAAQ;IACP,IAAI,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAChD;EAEAH,QAAQ;IACN,IAAI,CAACF,EAAE,CAACE,QAAQ,EAAE,CAACI,SAAS,CAAEC,GAAO,IAAG;MACtC,IAAI,CAACC,QAAQ,GAAGD,GAAG,CAACE,MAAM;MAC1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,QAAQ,CAAC;IAE5B,CAAC,CAAC;EACJ;EAGAI,SAAS,CAACC,IAAQ;IAChB,IAAG,CAAC,IAAI,CAACV,MAAM,EAAC;MACpB;MACA,IAAIW,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACZ,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAa;MAElF;MACAS,YAAY,CAACG,IAAI,CAACJ,IAAI,CAAC;MAEvB;MACAT,YAAY,CAACc,OAAO,CAAC,SAAS,EAAEH,IAAI,CAACI,SAAS,CAACL,YAAY,CAAC,CAAC;MAC7DJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAACE,IAAI,CAAC;KACtB,MAAI;MAETH,OAAO,CAACC,GAAG,CAAC,OAAO,EAACE,IAAI,CAAC;MAErB,IAAI,CAACb,EAAE,CAACoB,SAAS,CAACP,IAAI,CAAC,CAACP,SAAS,CAAC,MAAI,CAGtC,CAAC,CAAC;;EAIN;;AA1CaR,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR7B5B,8BAA4B;MAQ1BA,kEAqBI;MASNA,iBAAM;;;MA9BgEA,eAAW;MAAXA,sCAAW","names":["i0","ContentComponent","constructor","IS","ngOnInit","getItems","isUser","localStorage","getItem","subscribe","res","itemList","Result","console","log","AddToCart","item","existingData","JSON","parse","push","setItem","stringify","addToCart","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\content\\content.component.html","C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\content\\content.component.ts"],"sourcesContent":["<div class=\"container mt-4\">\n    <div class=\"row d-flex justify-content-center m-2\">\n\n      \n\n\n  \n  \n  <div class=\"col-6 col-sm-6 col-lg-3 mb-2 mt-2 p-1\" *ngFor=\"let item of itemList\">\n  <div class=\"card\" style=\"height: 350px;\" >\n     <img src=\"{{ item.item_image }}\" class=\"card-img-top img-fluid\" alt=\"...\" style=\"height: 200px;\">\n      <div class=\"card-body text-center\">\n        <h5 class=\"card-title\">{{ item.item_name }}</h5>\n        <div class=\"content mt-1 mb-4\" style=\"height: 20px;\">\n          \n          <p class=\"card-text mb-4 text-danger\">Discount {{ item.item_discount }}%</p>\n        </div>\n        <div class=\"btnAdd d-flex justify-content-between\" style=\"margin-top: 20px;\">\n          <div class=\"aadto\">\n            <a href=\"#\" class=\"btn btn-success\"  (click)=\"AddToCart(item)\">Add To Cart</a>\n          </div>\n          \n          <div class=\"price \">\n            <p class=\"text-success mt-2 m-1\"> ₹ {{ item.item_price }}</p>\n          </div>\n                     \n                    </div>\n      </div>\n    </div>\n</div>\n\n\n\n\n  \n\n\n\n</div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ItemServiceService } from 'src/app/services/item-service.service';\n\n@Component({\n  selector: 'app-content',\n  templateUrl: './content.component.html',\n  styleUrls: ['./content.component.scss']\n})\nexport class ContentComponent implements OnInit {\n\n  itemList:any;\nisUser:any;\n  constructor(private IS:ItemServiceService){}\n\n  ngOnInit() {\n   this.getItems();\nthis.isUser = localStorage.getItem(\"UserLoggedIn\");\n  }\n\n  getItems(){\n    this.IS.getItems().subscribe((res:any)=>{\n      this.itemList = res.Result;\n      console.log(this.itemList);\n      \n    })\n  }\n\n\n  AddToCart(item:any){\n    if(!this.isUser){\n// Retrieve existing data from LocalStorage or create a new empty array\nlet existingData = JSON.parse(localStorage.getItem(\"MyItems\") || \"[]\") as string[];\n\n// Add the new object to the existing array\nexistingData.push(item);\n\n// Save the updated array to LocalStorage\nlocalStorage.setItem('MyItems', JSON.stringify(existingData));\nconsole.log(\"Locals \",item);\n    }else{\n\nconsole.log(\"Data \",item);\n\n    this.IS.addToCart(item).subscribe(()=>{\n     \n      \n    })\n    \n  }\n\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}