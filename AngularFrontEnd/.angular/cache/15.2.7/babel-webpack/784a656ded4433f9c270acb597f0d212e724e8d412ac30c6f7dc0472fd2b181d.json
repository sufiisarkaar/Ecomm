{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"src/app/services/toaster.service\";\nimport * as i4 from \"@angular/router\";\nexport class RegisterComponent {\n  constructor(fb, userSer, toaster, router) {\n    this.fb = fb;\n    this.userSer = userSer;\n    this.toaster = toaster;\n    this.router = router;\n    this.userRegister = this.fb.group({\n      'name': this.fb.control('', [Validators.required]),\n      'email': this.fb.control('', [Validators.required]),\n      'phone': this.fb.control('', [Validators.required]),\n      'password': this.fb.control('', [Validators.required]),\n      'confirmPassword': this.fb.control('', [Validators.required])\n    });\n  }\n  register(value) {\n    this.userSer.userSignup(value).subscribe(res => {\n      if (!res.error) {\n        this.toaster.RegisterSuccess(res.Success);\n        console.log(res, \"register\");\n        // this.router.navigateByUrl(\"/login\");    \n      }\n    });\n  }\n}\n\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.ToasterService), i0.ɵɵdirectiveInject(i4.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 31,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-6\", \"mt-5\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"formInput\", \"mt-2\", \"mb-2\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"phone\", \"id\", \"\", 1, \"form-control\"], [\"type\", \"email\", \"formControlName\", \"email\", \"id\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"id\", \"\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"id\", \"\", 1, \"form-control\"], [1, \"loginBtn\", \"mt-4\", \"d-flex\", \"justify-content-between\"], [1, \"btn\", \"btn-dark\", \"col-4\", \"col-sm-4\"], [1, \"col-4\", \"col-sm-6\", \"float-right\"], [\"routerLink\", \"/login\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.register(ctx.userRegister.value);\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 5);\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\", 5);\n      i0.ɵɵtext(22, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 11)(25, \"button\", 12);\n      i0.ɵɵtext(26, \"Signup\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"p\", 13);\n      i0.ɵɵtext(28, \" Have a Account? \");\n      i0.ɵɵelementStart(29, \"a\", 14);\n      i0.ɵɵtext(30, \"Login Here!\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.userRegister);\n    }\n  },\n  dependencies: [i4.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AAUnE,OAAM,MAAOC,iBAAiB;EAG5BC,YAAoBC,EAAe,EAAUC,OAAqB,EAAUC,OAAsB,EAAUC,MAAa;IAArG,OAAE,GAAFH,EAAE;IAAuB,YAAO,GAAPC,OAAO;IAAwB,YAAO,GAAPC,OAAO;IAAyB,WAAM,GAANC,MAAM;IAEhH,IAAI,CAACC,YAAY,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAChC,MAAM,EAAE,IAAI,CAACL,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MAClD,OAAO,EAAE,IAAI,CAACP,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACnD,OAAO,EAAE,IAAI,CAACP,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACnD,UAAU,EAAE,IAAI,CAACP,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACtD,iBAAiB,EAAE,IAAI,CAACP,EAAE,CAACM,OAAO,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC;KAC7D,CAAC;EAEJ;EAGAC,QAAQ,CAACC,KAAU;IACjB,IAAI,CAACR,OAAO,CAACS,UAAU,CAACD,KAAK,CAAC,CAACE,SAAS,CAAEC,GAAO,IAAI;MACnD,IAAG,CAACA,GAAG,CAACC,KAAK,EAAC;QACpB,IAAI,CAACX,OAAO,CAACY,eAAe,CAACF,GAAG,CAACG,OAAO,CAAC;QACzCC,OAAO,CAACC,GAAG,CAACL,GAAG,EAAE,UAAU,CAAC;QAE5B;;IAOA,CAAC;EACD;;;AA9Bad,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,8BAAuB;MAGgBA;QAAA,OAAYC,oCAA4B;MAAA,EAAC;MAExED,8BAAiC;MACjBA,oBAAI;MAAAA,iBAAQ;MAC1BA,2BAAqE;MACvEA,iBAAM;MAENA,8BAAiC;MACjBA,sBAAK;MAAAA,iBAAQ;MAC3BA,4BAAsE;MACxEA,iBAAM;MAENA,+BAAiC;MACjBA,sBAAK;MAAAA,iBAAQ;MAC3BA,4BAAuE;MACzEA,iBAAM;MAENA,+BAAiC;MACjBA,yBAAQ;MAAAA,iBAAQ;MAC9BA,4BAA6E;MAC/EA,iBAAM;MAENA,+BAAiC;MACjBA,iCAAgB;MAAAA,iBAAQ;MACtCA,6BAAoF;MACtFA,iBAAM;MAENA,gCAA0D;MACZA,uBAAM;MAAAA,iBAAS;MAC3DA,8BAAsC;MAACA,kCAAgB;MAAAA,8BAAuB;MAAAA,4BAAW;MAAAA,iBAAI;;;MA7B3FA,eAA0B;MAA1BA,4CAA0B","names":["Validators","RegisterComponent","constructor","fb","userSer","toaster","router","userRegister","group","control","required","register","value","userSignup","subscribe","res","error","RegisterSuccess","Success","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\register\\register.component.ts","C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToasterService } from 'src/app/services/toaster.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  userRegister: FormGroup;\n\n  constructor(private fb: FormBuilder, private userSer: UsersService, private toaster:ToasterService, private router:Router) {\n\n    this.userRegister = this.fb.group({\n      'name': this.fb.control('', [Validators.required]),\n      'email': this.fb.control('', [Validators.required]),\n      'phone': this.fb.control('', [Validators.required]),\n      'password': this.fb.control('', [Validators.required]),\n      'confirmPassword': this.fb.control('', [Validators.required]),\n    })\n\n  }\n\n\n  register(value: any) {\n    this.userSer.userSignup(value).subscribe((res:any) => {\n      if(!res.error){\nthis.toaster.RegisterSuccess(res.Success);\nconsole.log(res, \"register\");\n\n// this.router.navigateByUrl(\"/login\");    \n      }\n      \n      \n  \n  \n\n}\n","<div class=\"container\">\n  <div class=\"row d-flex justify-content-center\">\n    <div class=\"col-6 mt-5 mb-5\">\n      <form [formGroup]=\"userRegister\" (ngSubmit)=\"register(userRegister.value)\">\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Name</label>\n          <input type=\"text\" formControlName=\"name\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Phone</label>\n          <input type=\"text\" formControlName=\"phone\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Email</label>\n          <input type=\"email\" formControlName=\"email\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Password</label>\n          <input type=\"password\" formControlName=\"password\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Confirm Password</label>\n          <input type=\"password\" formControlName=\"confirmPassword\" id=\"\" class=\"form-control\">\n        </div>\n\n        <div class=\"loginBtn mt-4 d-flex justify-content-between\">\n          <button class=\"btn btn-dark col-4 col-sm-4\">Signup</button>\n          <p class=\"col-4 col-sm-6 float-right\"> Have a Account? <a routerLink=\"/login\">Login Here!</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}