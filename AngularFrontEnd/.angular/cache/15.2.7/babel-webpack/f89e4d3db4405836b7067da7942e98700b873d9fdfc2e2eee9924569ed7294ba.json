{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"src/app/services/toaster.service\";\nimport * as i4 from \"@angular/common\";\nfunction ProfileComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function ProfileComponent_div_26_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.editProfile(ctx_r1.updateProfile.value));\n    });\n    i0.ɵɵelementStart(2, \"div\", 11)(3, \"label\", 12);\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_div_26_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.user.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 14)(7, \"label\", 12);\n    i0.ɵɵtext(8, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_div_26_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.user.phone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 14)(11, \"label\", 12);\n    i0.ɵɵtext(12, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_div_26_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.user.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 14)(15, \"label\", 12);\n    i0.ɵɵtext(16, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function ProfileComponent_div_26_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.user.password = $event);\n    });\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.updateProfile);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.name);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.phone);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.phone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.email);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.user.password);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.user.password);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nexport class ProfileComponent {\n  constructor(FB, US, toaster) {\n    this.FB = FB;\n    this.US = US;\n    this.toaster = toaster;\n    this.edit = false;\n    this.bgColor = '#f0ad4e';\n    this.user = {\n      name: '',\n      email: '',\n      phone: '',\n      password: ''\n    };\n    this.updateProfile = this.FB.group({\n      name: this.FB.control('', [Validators.required]),\n      email: this.FB.control('', [Validators.required]),\n      phone: this.FB.control('', [Validators.required]),\n      password: this.FB.control('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.checkUser();\n  }\n  editProfile(FormData) {\n    this.edit = !this.edit;\n    this.user.name = this.name;\n    this.user.email = this.email;\n    this.user.phone = this.phone;\n    this.user.password = this.password;\n    if (!this.edit) {\n      this.bgColor = '#f0ad4e';\n      let user = localStorage.getItem(\"user\");\n      let UserId = user && JSON.parse(user).data.id;\n      this.US.updateProfile(UserId, FormData).subscribe(res => {\n        this.toaster.ProfileUpdateSuccess();\n        this.checkUser();\n      });\n      // Write Profile Update Code Here\n      // 8269730633\n    } else {\n      this.bgColor = '#28a745';\n    }\n  }\n  checkUser() {\n    let user = localStorage.getItem(\"user\");\n    let UserId = user && JSON.parse(user).data.id;\n    if (UserId) {\n      this.US.getProfile(UserId).subscribe(res => {\n        this.name = res.data.name;\n        this.email = res.data.email;\n        this.phone = res.data.phone;\n        this.password = res.data.password;\n      });\n    }\n  }\n}\nProfileComponent.ɵfac = function ProfileComponent_Factory(t) {\n  return new (t || ProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.ToasterService));\n};\nProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProfileComponent,\n  selectors: [[\"app-profile\"]],\n  decls: 27,\n  vars: 8,\n  consts: [[1, \"container\", \"mt-4\", \"mb-4\"], [1, \"row\", \"d-flex\"], [1, \"col-12\", \"col-sm-6\", \"d-flex\"], [1, \"col-12\", \"col-sm-8\"], [1, \"col-12\", \"col-sm-4\"], [\"src\", \"../../../assets/61050397.jpg\", \"alt\", \"Image Not\\n                        Found\", 1, \"img-fluid\"], [1, \"editProfile\", 2, \"margin-top\", \"100px\"], [1, \"btn\", 3, \"ngStyle\", \"click\"], [\"class\", \"col-6\", 4, \"ngIf\"], [1, \"col-6\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"formInput\", \"mb-2\"], [\"for\", \"\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [1, \"formInput\", \"mt-2\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"phone\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"], [\"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngModel\", \"value\", \"ngModelChange\"]],\n  template: function ProfileComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 1)(4, \"div\", 3)(5, \"h5\");\n      i0.ɵɵtext(6, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"h5\");\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"h5\");\n      i0.ɵɵtext(14, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"h5\");\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"p\");\n      i0.ɵɵtext(20, \"**************\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 4);\n      i0.ɵɵelement(22, \"img\", 5);\n      i0.ɵɵelementStart(23, \"div\", 6)(24, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function ProfileComponent_Template_button_click_24_listener() {\n        return ctx.editProfile(ctx.updateProfile.value);\n      });\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵtemplate(26, ProfileComponent_div_26_Template, 18, 9, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵtextInterpolate(ctx.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.phone);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c0, ctx.bgColor));\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.edit ? \"Update Profile\" : \"Edit Profile\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.edit);\n    }\n  },\n  dependencies: [i4.NgIf, i4.NgStyle, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","ProfileComponent","constructor","FB","US","toaster","name","email","phone","password","updateProfile","group","control","required","ngOnInit","checkUser","editProfile","FormData","edit","user","bgColor","localStorage","getItem","UserId","JSON","parse","data","id","subscribe","res","ProfileUpdateSuccess","getProfile","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\profile\\profile.component.ts","C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\profile\\profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToasterService } from 'src/app/services/toaster.service';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  edit: boolean = false;\n  bgColor: any = '#f0ad4e';\n  updateProfile: FormGroup;\n\n\n  name: any;\n  email: any;\n  phone: any;\n  password: any;\n\n  user: any = {\n    name: '',\n    email: '',\n    phone: '',\n    password: '',\n  }\n  constructor(private FB: FormBuilder, private US: UsersService, private toaster:ToasterService) {\n    this.updateProfile = this.FB.group({\n      name: this.FB.control('', [Validators.required]),\n      email: this.FB.control('', [Validators.required]),\n      phone: this.FB.control('', [Validators.required]),\n      password: this.FB.control('', [Validators.required]),\n    })\n  }\n\n  ngOnInit() {\n    this.checkUser();\n  }\n\n  editProfile(FormData: any) {\n    this.edit = !this.edit;\n    this.user.name = this.name;\n    this.user.email = this.email;\n    this.user.phone = this.phone;\n    this.user.password = this.password;\n    if (!this.edit) {\n      this.bgColor = '#f0ad4e';\n      let user: any = localStorage.getItem(\"user\");\n      let UserId = user && JSON.parse(user).data.id;\n      this.US.updateProfile(UserId, FormData).subscribe((res: any) => {\n        this.toaster.ProfileUpdateSuccess();\n        this.checkUser();\n      })\n      // Write Profile Update Code Here\n\n      // 8269730633\n    } else {\n      this.bgColor = '#28a745';\n    }\n  }\n\n  checkUser() {\n    let user: any = localStorage.getItem(\"user\");\n    let UserId = user && JSON.parse(user).data.id;\n    if (UserId) {\n      this.US.getProfile(UserId).subscribe((res: any) => {\n        this.name = res.data.name;\n        this.email = res.data.email;\n        this.phone = res.data.phone;\n        this.password = res.data.password;\n      })\n    }\n  }\n\n\n\n}\n","<div class=\"container mt-4 mb-4\">\n  <div class=\"row d-flex\">\n    <div class=\"col-12 col-sm-6 d-flex\">\n      <div class=\"row d-flex\">\n        <div class=\"col-12 col-sm-8\">\n\n          <h5>Name</h5>\n          <p>{{ name }}</p>\n\n          <h5>Email</h5>\n          <p>{{ email }}</p>\n\n          <h5>Phone</h5>\n          <p>{{ phone }}</p>\n\n          <h5>Password</h5>\n          <p>**************</p>\n\n        </div>\n\n        <div class=\"col-12 col-sm-4\">\n          <img src=\"../../../assets/61050397.jpg\" alt=\"Image Not\n                        Found\" class=\"img-fluid\" />\n          <div class=\"editProfile\" style=\"margin-top: 100px;\">\n            <button class=\"btn \" (click)=\"editProfile(updateProfile.value)\"\n              [ngStyle]=\"{'background-color': bgColor}\">{{ edit? 'Update Profile' : 'Edit Profile' }}</button>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n\n\n\n    <div class=\"col-6\" *ngIf=\"edit\">\n      <form [formGroup]=\"updateProfile\" (ngSubmit)=\"editProfile(updateProfile.value)\">\n\n        <div class=\"formInput  mb-2\">\n          <label for=\"\">Name</label>\n          <input type=\"text\" formControlName=\"name\" [(ngModel)]=\"user.name\" value=\"{{ user.name }}\"\n            class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Phone</label>\n          <input type=\"text\" formControlName=\"phone\" [(ngModel)]=\"user.phone\" value=\"{{ user.phone }}\"\n            class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Email</label>\n          <input type=\"email\" formControlName=\"email\" [(ngModel)]=\"user.email\" value=\"{{ user.email }}\"\n            class=\"form-control\">\n        </div>\n\n        <div class=\"formInput mt-2 mb-2\">\n          <label for=\"\">Password</label>\n          <input type=\"password\" formControlName=\"password\" [(ngModel)]=\"user.password\" value=\"{{ user.password }}\"\n            class=\"form-control\">\n        </div>\n\n\n      </form>\n    </div>\n\n  </div>\n\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}