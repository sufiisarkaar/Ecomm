{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ProfileComponent = class ProfileComponent {\n  constructor(FB, U) {\n    this.FB = FB;\n    this.U = U;\n    this.edit = false;\n    this.bgColor = '#f0ad4e';\n    this.user = {\n      name: '',\n      email: '',\n      phone: '',\n      password: ''\n    };\n    this.updateProfile = this.FB.group({\n      name: this.FB.control('', [Validators.required]),\n      email: this.FB.control('', [Validators.required]),\n      phone: this.FB.control('', [Validators.required]),\n      password: this.FB.control('', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.checkUser();\n  }\n  editProfile(FormData) {\n    this.edit = !this.edit;\n    this.user.name = this.name;\n    this.user.email = this.email;\n    this.user.phone = this.phone;\n    this.user.password = this.password;\n    if (!this.edit) {\n      this.bgColor = '#f0ad4e';\n      this;\n      console.log(\"Updated\", FormData);\n      // Write Profile Update Code Here\n    } else {\n      console.log(\"Not\", FormData);\n      this.bgColor = '#28a745';\n    }\n  }\n  checkUser() {\n    let user = localStorage.getItem(\"user\");\n    let verifyUser = user && JSON.parse(user);\n    if (verifyUser) {\n      this.name = verifyUser.data.name;\n      this.email = verifyUser.data.email;\n      this.phone = verifyUser.data.phone;\n      this.password = verifyUser.data.password;\n    }\n  }\n};\nProfileComponent = __decorate([Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})], ProfileComponent);\nexport { ProfileComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAiB7BC,YAAoBC,EAAc,EAAUC,CAAC;IAAzB,OAAE,GAAFD,EAAE;IAAsB,MAAC,GAADC,CAAC;IAhB3C,SAAI,GAAY,KAAK;IACrB,YAAO,GAAQ,SAAS;IASxB,SAAI,GAAM;MACRC,IAAI,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;KACX;IAEH,IAAI,CAACC,aAAa,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MACjCL,IAAI,EAAG,IAAI,CAACF,EAAE,CAACQ,OAAO,CAAC,EAAE,EAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;MAChDN,KAAK,EAAG,IAAI,CAACH,EAAE,CAACQ,OAAO,CAAC,EAAE,EAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACjDL,KAAK,EAAG,IAAI,CAACJ,EAAE,CAACQ,OAAO,CAAC,EAAE,EAAC,CAACX,UAAU,CAACY,QAAQ,CAAC,CAAC;MACjDJ,QAAQ,EAAG,IAAI,CAACL,EAAE,CAACQ,OAAO,CAAC,EAAE,EAAC,CAACX,UAAU,CAACY,QAAQ,CAAC;KACpD,CAAC;EACF;EAEAC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAElB;EAEEC,WAAW,CAACC,QAAY;IAEtB,IAAI,CAACC,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;IAC1B,IAAI,CAACC,IAAI,CAACb,IAAI,GAAG,IAAI,CAACA,IAAI;IAC1B,IAAI,CAACa,IAAI,CAACZ,KAAK,GAAG,IAAI,CAACA,KAAK;IAC5B,IAAI,CAACY,IAAI,CAACX,KAAK,GAAG,IAAI,CAACA,KAAK;IAC5B,IAAI,CAACW,IAAI,CAACV,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAI,CAAC,IAAI,CAACS,IAAI,EAAE;MAEd,IAAI,CAACE,OAAO,GAAG,SAAS;MACxB,IAAI;MACJC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACL,QAAQ,CAAC;MAC/B;KAGD,MAAM;MACLI,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEL,QAAQ,CAAC;MAC5B,IAAI,CAACG,OAAO,GAAG,SAAS;;EAG5B;EAEAL,SAAS;IACP,IAAII,IAAI,GAAOI,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC3C,IAAIC,UAAU,GAAGN,IAAI,IAAIO,IAAI,CAACC,KAAK,CAACR,IAAI,CAAC;IACzC,IAAGM,UAAU,EAAC;MACZ,IAAI,CAACnB,IAAI,GAAGmB,UAAU,CAACG,IAAI,CAACtB,IAAI;MAChC,IAAI,CAACC,KAAK,GAAGkB,UAAU,CAACG,IAAI,CAACrB,KAAK;MAClC,IAAI,CAACC,KAAK,GAAGiB,UAAU,CAACG,IAAI,CAACpB,KAAK;MAClC,IAAI,CAACC,QAAQ,GAAGgB,UAAU,CAACG,IAAI,CAACnB,QAAQ;;EAE5C;CAID;AAlEYP,gBAAgB,eAL5BF,SAAS,CAAC;EACT6B,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW7B,gBAAgB,CAkE5B;SAlEYA,gBAAgB","names":["Component","Validators","ProfileComponent","constructor","FB","U","name","email","phone","password","updateProfile","group","control","required","ngOnInit","checkUser","editProfile","FormData","edit","user","bgColor","console","log","localStorage","getItem","verifyUser","JSON","parse","data","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\components\\profile\\profile.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  edit: boolean = false;\n  bgColor: any = '#f0ad4e';\n  updateProfile : FormGroup;\n\n\n  name:any;\n  email:any;\n  phone:any;\n  password:any;\n\n  user:any ={\n    name: '',\n   email: '',\n    phone: '',\n    password: '',\n  }\nconstructor(private FB:FormBuilder, private U){\nthis.updateProfile = this.FB.group({\n  name : this.FB.control('',[Validators.required]),\n  email : this.FB.control('',[Validators.required]),\n  phone : this.FB.control('',[Validators.required]),\n  password : this.FB.control('',[Validators.required]),\n})\n}\n\nngOnInit(){\n  this.checkUser();\n  \n}\n\n  editProfile(FormData:any) {\n\n    this.edit = !this.edit;\nthis.user.name = this.name;\nthis.user.email = this.email;\nthis.user.phone = this.phone;\nthis.user.password = this.password;\n    if (!this.edit) {\n\n      this.bgColor = '#f0ad4e';\n      this\n      console.log(\"Updated\",FormData);\n      // Write Profile Update Code Here\n\n\n    } else {\n      console.log(\"Not\", FormData);\n      this.bgColor = '#28a745';\n    }\n\n  }\n\n  checkUser(){\n    let user:any = localStorage.getItem(\"user\");\n    let verifyUser = user && JSON.parse(user);\n    if(verifyUser){\n      this.name = verifyUser.data.name;\n      this.email = verifyUser.data.email;\n      this.phone = verifyUser.data.phone;\n      this.password = verifyUser.data.password;\n    }\n  }\n\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}