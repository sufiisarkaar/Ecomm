{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ItemServiceService {\n  constructor(http) {\n    this.http = http;\n    this.cardData = new EventEmitter();\n    this.checkLocalStorage();\n  }\n  ngOnInit() {\n    this.checkLocalStorage();\n  }\n  getItems() {\n    return this.http.get(\"http://localhost:8000/api/itemGet\");\n  }\n  addToCart(data) {\n    return this.http.post(\"http://localhost:8000/api/addCart\", data);\n  }\n  getCartData() {\n    return this.http.get(\"http://localhost:8000/api/getCartData\");\n  }\n  getCartDataByUserID(userId) {\n    return this.http.get(\"http://localhost:8000/api/getCartData/\" + userId);\n  }\n  updateCartQuantityPlus(id, qty) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyPlus/\" + id, qty);\n  }\n  updateCartQuantityMinus(id, qty) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyMinus/\" + id, qty);\n  }\n  PendingdataAddedLocalToDb(data) {\n    return this.http.post(\"http://localhost:8000/api/addPending\", data);\n  }\n  PendingdataTruncateToDb() {\n    this.http.get(\"http://localhost:8000/api/truncateTable\").subscribe(res => {});\n  }\n  getLocalData() {\n    return this.http.get(\"http://localhost:8000/api/getLocalData\");\n  }\n  LocalupdateCartQuantityPlus(id, qty) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyPlusLocal/\" + id, qty);\n  }\n  LocalupdateCartQuantityMinus(id, qty) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyMinusLocal/\" + id, qty);\n  }\n  checkLocalStorage() {\n    let cardData = localStorage.getItem(\"MyItems\");\n    let confirmCardData = cardData && JSON.parse(cardData).length;\n    if (confirmCardData === null) {\n      this.PendingdataTruncateToDb();\n    }\n  }\n}\nItemServiceService.ɵfac = function ItemServiceService_Factory(t) {\n  return new (t || ItemServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nItemServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ItemServiceService,\n  factory: ItemServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAA4B,eAAe;;;AAKhE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,aAAQ,GAAG,IAAIH,YAAY,EAAc;IAGvC,IAAI,CAACI,iBAAiB,EAAE;EAC1B;EAEAC,QAAQ;IACN,IAAI,CAACD,iBAAiB,EAAE;EAC1B;EAEAE,QAAQ;IACN,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAC,mCAAmC,CAAC;EAC3D;EAEAC,SAAS,CAACC,IAAS;IACjB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,mCAAmC,EAAED,IAAI,CAAC;EAClE;EAEAE,WAAW;IACT,OAAO,IAAI,CAACR,IAAI,CAACI,GAAG,CAAC,uCAAuC,CAAC;EAC/D;EAGAK,mBAAmB,CAACC,MAAW;IAC7B,OAAO,IAAI,CAACV,IAAI,CAACI,GAAG,CAAC,wCAAwC,GAAGM,MAAM,CAAC;EACzE;EAEAC,sBAAsB,CAACC,EAAO,EAAEC,GAAQ;IACtC,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,0CAA0C,GAAGF,EAAE,EAAEC,GAAG,CAAC;EAC5E;EAEAE,uBAAuB,CAACH,EAAO,EAAEC,GAAQ;IACvC,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,2CAA2C,GAAGF,EAAE,EAAEC,GAAG,CAAC;EAC7E;EAGAG,yBAAyB,CAACV,IAAS;IACjC,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,sCAAsC,EAAED,IAAI,CAAC;EACrE;EAEAW,uBAAuB;IACrB,IAAI,CAACjB,IAAI,CAACI,GAAG,CAAC,yCAAyC,CAAC,CAACc,SAAS,CAAEC,GAAG,IAAI,CAC3E,CAAC,CAAC;EACJ;EAIAC,YAAY;IACV,OAAO,IAAI,CAACpB,IAAI,CAACI,GAAG,CAAC,wCAAwC,CAAC;EAChE;EAKAiB,2BAA2B,CAACT,EAAO,EAAEC,GAAQ;IAC3C,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,+CAA+C,GAAGF,EAAE,EAAEC,GAAG,CAAC;EACjF;EAEAS,4BAA4B,CAACV,EAAO,EAAEC,GAAQ;IAC5C,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAC,gDAAgD,GAAGF,EAAE,EAAEC,GAAG,CAAC;EAClF;EAGAZ,iBAAiB;IACf,IAAIsB,QAAQ,GAAQC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACnD,IAAIC,eAAe,GAAGH,QAAQ,IAAII,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC,CAACM,MAAM;IAC7D,IAAIH,eAAe,KAAK,IAAI,EAAE;MAC5B,IAAI,CAACT,uBAAuB,EAAE;;EAElC;;AAtEWnB,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAgC,SAAlBhC,kBAAkB;EAAAiC,YAFjB;AAAM","names":["EventEmitter","ItemServiceService","constructor","http","checkLocalStorage","ngOnInit","getItems","get","addToCart","data","post","getCartData","getCartDataByUserID","userId","updateCartQuantityPlus","id","qty","put","updateCartQuantityMinus","PendingdataAddedLocalToDb","PendingdataTruncateToDb","subscribe","res","getLocalData","LocalupdateCartQuantityPlus","LocalupdateCartQuantityMinus","cardData","localStorage","getItem","confirmCardData","JSON","parse","length","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\services\\item-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { EventEmitter, Injectable, OnInit } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemServiceService implements OnInit {\n  cardData = new EventEmitter<any[] | []>();\n\n  constructor(private http: HttpClient) {\n    this.checkLocalStorage();\n  }\n\n  ngOnInit() {\n    this.checkLocalStorage();\n  }\n\n  getItems() {\n    return this.http.get(\"http://localhost:8000/api/itemGet\");\n  }\n\n  addToCart(data: any) {\n    return this.http.post(\"http://localhost:8000/api/addCart\", data);\n  }\n\n  getCartData() {\n    return this.http.get(\"http://localhost:8000/api/getCartData\");\n  }\n\n\n  getCartDataByUserID(userId: any) {\n    return this.http.get(\"http://localhost:8000/api/getCartData/\" + userId);\n  }\n\n  updateCartQuantityPlus(id: any, qty: any) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyPlus/\" + id, qty);\n  }\n\n  updateCartQuantityMinus(id: any, qty: any) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyMinus/\" + id, qty);\n  }\n\n\n  PendingdataAddedLocalToDb(data: any) {\n    return this.http.post(\"http://localhost:8000/api/addPending\", data);\n  }\n\n  PendingdataTruncateToDb() {\n    this.http.get(\"http://localhost:8000/api/truncateTable\").subscribe((res) => {\n    })\n  }\n\n\n\n  getLocalData() {\n    return this.http.get(\"http://localhost:8000/api/getLocalData\");\n  }\n\n\n\n\n  LocalupdateCartQuantityPlus(id: any, qty: any) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyPlusLocal/\" + id, qty);\n  }\n\n  LocalupdateCartQuantityMinus(id: any, qty: any) {\n    return this.http.put(\"http://localhost:8000/api/updateQtyMinusLocal/\" + id, qty);\n  }\n\n\n  checkLocalStorage() {\n    let cardData: any = localStorage.getItem(\"MyItems\");\n    let confirmCardData = cardData && JSON.parse(cardData).length;\n    if (confirmCardData === null) {\n      this.PendingdataTruncateToDb();\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}