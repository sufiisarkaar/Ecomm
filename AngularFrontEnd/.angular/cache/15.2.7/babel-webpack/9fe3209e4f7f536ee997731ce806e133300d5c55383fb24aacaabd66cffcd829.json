{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nexport class ToasterService {\n  constructor(toaster) {\n    this.toaster = toaster;\n    this.showSuccess();\n  }\n  QuantityUpdatedPlus() {\n    this.toaster.info('One More Quantity Addded This Item', 'FoodCounter Says!');\n  }\n  QuantityUpdatedMinus() {\n    this.toaster.warning('One Quantity Discrease This Item', 'FoodCounter Says!');\n  }\n  LoginSuccess() {\n    this.toaster.success('Login Success! ', 'FoodCounter Says!');\n  }\n  RegisterSuccess() {\n    this.toaster.success('Registeration Success!, Please Wait You Will Redirect ', 'FoodCounter Says!');\n  }\n}\nToasterService.ɵfac = function ToasterService_Factory(t) {\n  return new (t || ToasterService)(i0.ɵɵinject(i1.ToastrService));\n};\nToasterService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ToasterService,\n  factory: ToasterService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,cAAc;EAEzBC,YAAoBC,OAAqB;IAArB,YAAO,GAAPA,OAAO;IACzB,IAAI,CAACC,WAAW,EAAE;EACpB;EAGAC,mBAAmB;IACjB,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC,oCAAoC,EAAE,mBAAmB,CAAC;EAC9E;EAEAC,oBAAoB;IAClB,IAAI,CAACJ,OAAO,CAACK,OAAO,CAAC,kCAAkC,EAAE,mBAAmB,CAAC;EAC/E;EAEAC,YAAY;IACV,IAAI,CAACN,OAAO,CAACO,OAAO,CAAC,iBAAiB,EAAE,mBAAmB,CAAC;EAC9D;EAEDC,eAAe;IACZ,IAAI,CAACR,OAAO,CAACO,OAAO,CAAC,wDAAwD,EAAE,mBAAmB,CAAC;EACrG;;AArBWT,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAFb;AAAM","names":["ToasterService","constructor","toaster","showSuccess","QuantityUpdatedPlus","info","QuantityUpdatedMinus","warning","LoginSuccess","success","RegisterSuccess","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\PILR\\Desktop\\AngularWithLaravelAPI\\AngularFrontEnd\\src\\app\\services\\toaster.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {  ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasterService {\n\n  constructor(private toaster:ToastrService) { \n    this.showSuccess();\n  }\n\n\n  QuantityUpdatedPlus() {\n    this.toaster.info('One More Quantity Addded This Item', 'FoodCounter Says!');\n  }\n\n  QuantityUpdatedMinus() {\n    this.toaster.warning('One Quantity Discrease This Item', 'FoodCounter Says!');\n  }\n\n  LoginSuccess() {\n    this.toaster.success('Login Success! ', 'FoodCounter Says!');\n  }\n\n RegisterSuccess() {\n    this.toaster.success('Registeration Success!, Please Wait You Will Redirect ', 'FoodCounter Says!');\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}